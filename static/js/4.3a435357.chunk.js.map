{"version":3,"file":"static/js/4.3a435357.chunk.js","mappings":"yIACA,GAAgB,MAAQ,qBAAqB,eAAiB,8BAA8B,OAAS,uB,SCerG,EAP8B,SAAH,GAAoC,IAA/BA,EAAM,EAANA,OAAOC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAC9C,OAAQ,gBAAKC,UAAWH,EAAO,GAAD,OAAKI,EAAAA,MAAO,YAAIA,EAAAA,QAAQ,WAAOA,EAAAA,OAAWC,QAAS,kBAAKJ,GAAU,EAAM,EAAC,UACnG,gBAAKE,UAAYH,EAAO,GAAD,OAAII,EAAAA,eAAgB,YAAIA,EAAAA,QAAQ,UAAOA,EAAAA,eAAgB,YAAIA,EAAAA,QAAaC,QAAS,SAAAC,GAAC,OAAGA,EAAEC,iBAAiB,EAAC,SAC3HL,KAGb,C,uFCdA,EAA0B,6BAA1B,EAAqE,iCAArE,EAAiL,yCAAjL,EAAqO,8BAArO,EAAuR,uC,kBCEvR,SAASM,EAAY,GAAyB,IAAxBC,EAAK,EAALA,MAClB,OAAO,gBAAKN,UAAWC,EAAU,UACzB,wBAAKK,KAGjB,CAEA,MAAeC,EAAAA,KAAWF,G,QCDpBG,EAAuC,SAAD,GAAoC,IAAjCC,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eACxD,GAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAA9CC,EAAW,KAAEC,EAAc,KAElC,SAASC,IACL,OAA0BH,EAAAA,EAAAA,UAAS,IAAG,eAA/BL,EAAK,KAAES,EAAQ,KACtB,GAAuBJ,EAAAA,EAAAA,WAAS,GAAM,eAA/BK,EAAK,KAACC,EAAQ,KAQrB,OAAQ,kBAAMjB,UAAWC,EAAqBiB,SAAU,SAACf,GAAC,OAP1D,SAAsBA,GAClBA,EAAEgB,iBACCV,EAAYW,OAAM,SAACC,GAAO,OAAGA,EAAQC,OAAOhB,CAAK,KAChDI,EAAeJ,EAAOG,EAAYc,OAAS,GAC3CV,GAAe,IACZI,GAAS,EACpB,CAC+DO,CAAarB,EAAE,EAAC,WAC3E,kBAAOsB,MAAO,CAACC,OAAOV,EAAQ,gBAAkB,QAASW,MAAOrB,EAAOsB,QAAS,eAAgBtB,MAAM,wBAAwBuB,SAAU,SAAC1B,GACrIY,EAASZ,EAAE2B,OAAOH,MACtB,EAAGI,KAAM,OAAQC,YAAa,kBAC9B,mBAAQC,UAAW3B,EAAM,kBACxBU,IAAO,cAAGS,MAAO,CAACS,MAAM,QAAQC,SAAS,SAASC,aAAa,iBAAiB,yCAEzF,CACA,OAAQ,qBAASpC,UAAWC,EAAc,WACtC,gBAAKD,UAAWC,EAAsB,UAClC,mBAAQC,QAAS,kBAAMW,GAAe,EAAK,EAAC,+BAEhD,gBAAKb,UAAWC,EAAW,SAEnBQ,EAAY4B,KAAI,SAACC,GAAE,OAAK,SAAC,KAAI,CAACC,GAAID,EAAGhB,KAAK,UACtC,SAAC,EAAW,CAAChB,MAAOgC,EAAGhB,MAAWgB,EAAGE,KADOF,EAAGE,GAExC,OAInB,SAACC,EAAA,EAAK,CAAC5C,OAAQe,EAAad,UAAWe,EAAe,UAClD,SAACC,EAAS,QAGtB,EAEA,EAAeP,EAAAA,KAAWC,G,kBC9B1B,EAAeD,EAAAA,MAAWmC,EAAAA,EAAAA,KAJJ,SAACC,GAAkB,MAAM,CAC3ClC,YAAakC,EAAMnC,YAAYC,YAClC,GAEkD,CAACC,eAAAA,EAAAA,IAA1BgC,EAT8B,SAAH,GAAqC,IAAhCjC,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eAEnE,OAAO,SAAC,EAAW,CAACD,YAAaA,EAAaC,eAAgBA,GAClE,I","sources":["webpack://todo/./src/Components/Modal/Modal.module.less?2ad3","Components/Modal/Modal.tsx","webpack://todo/./src/Pages/ProjectPageContainer/ProjectPage/ProjectPage.module.less?8141","Pages/ProjectPageContainer/ProjectPage/ProjectCard.tsx","Pages/ProjectPageContainer/ProjectPage/ProjectPage.tsx","Pages/ProjectPageContainer/ProjectPageContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__1mttd\",\"modal__content\":\"Modal_modal__content__lAVmq\",\"active\":\"Modal_active__38XaT\"};","import React from \"react\";\r\nimport c from './Modal.module.less'\r\n\r\ntype Props={\r\n    active:boolean,\r\n    setActive:(a:boolean)=>void,\r\n    children:React.ReactNode\r\n}\r\n\r\nconst Modal:React.FC<Props> = ({active,setActive, children})=>{\r\n    return (<div className={active? `${c.modal} ${c.active}`:` ${c.modal}`} onClick={()=> setActive(false)}>\r\n        <div className={(active?`${c.modal__content} ${c.active}`: `${c.modal__content} ${c.Purple}`)} onClick={e=> e.stopPropagation()}>\r\n            {children}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Modal","// extracted by mini-css-extract-plugin\nexport default {\"Project\":\"ProjectPage_Project__XmlWJ\",\"ProjectPage\":\"ProjectPage_ProjectPage__pLuM1\",\"choosenProject\":\"ProjectPage_choosenProject__+fzWP\",\"ProjectPage__Button\":\"ProjectPage_ProjectPage__Button__hl-Un\",\"Projects\":\"ProjectPage_Projects__Z9NtH\",\"ProjectPage__form\":\"ProjectPage_ProjectPage__form__F2ZF-\",\"FormDate\":\"ProjectPage_FormDate__4CYxJ\",\"glow\":\"ProjectPage_glow__N7weT\"};","import React from \"react\";\r\nimport c from './ProjectPage.module.less'\r\n\r\nfunction ProjectCard({title}:{title:string}) {\r\n    return <div className={c.Project}>\r\n            <h1>{title}</h1>\r\n    </div>\r\n\r\n}\r\n\r\nexport default React.memo(ProjectCard)","import React, {FormEvent, useState} from \"react\";\r\nimport c from './ProjectPage.module.less'\r\nimport Modal from \"../../../Components/Modal/Modal\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ProjectPageProps} from \"../../../Types\";\r\n\r\n\r\n\r\nconst ProjectPage:React.FC<ProjectPageProps>=({ProjectData, ProjectCreator}) =>{\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    function ModalForm() {\r\n        const [title, setTitle] = useState('')\r\n        const [error,setError]=useState(false)\r\n        function HandleSubmit(e:FormEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            if(ProjectData.every((project)=>project.name!==title)){\r\n                ProjectCreator(title, ProjectData.length + 1)\r\n                setModalActive(false)\r\n            } else setError(true)\r\n        }\r\n        return (<form className={c.ProjectPage__form} onSubmit={(e) => HandleSubmit(e)}>\r\n            <input style={{border:error ? '1px solid red' : \"none\"}} value={title} pattern={\"[A-Za-z0-9]+\"} title=\"Only english alphabet\" onChange={(e) => {\r\n                setTitle(e.target.value)\r\n            }} type={'text'} placeholder={'Name Project'}/>\r\n            <button disabled={!title}>Save</button>\r\n            {error&&<p style={{color:'white',fontSize:'1.2rem',borderBottom:'1px solid red'}}>Only unique project names</p>}\r\n        </form>)\r\n    }\r\n    return (<section className={c.ProjectPage}>\r\n        <div className={c.ProjectPage__Button}>\r\n            <button onClick={() => setModalActive(true)}>Create Project</button>\r\n        </div>\r\n        <div className={c.Projects}>\r\n            {\r\n                ProjectData.map((el) => <Link to={el.name} key={el.id}>\r\n                    <ProjectCard title={el.name} key={el.id}/>\r\n                    </Link>\r\n                )}\r\n        </div>\r\n\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n            <ModalForm/>\r\n        </Modal>\r\n    </section>)\r\n}\r\n\r\nexport default React.memo(ProjectPage)","import React from \"react\";\r\nimport ProjectPage from \"./ProjectPage/ProjectPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProjectCreator} from '../../redux/ProjectPage-reducer'\r\nimport {Project} from \"../../Interfaces\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ActionCreator} from \"redux\";\r\nimport {ProjectCreatorType, ProjectPageProps} from \"../../Types\";\r\n\r\nconst ProjectPageContainer:React.FC<ProjectPageProps> = ({ProjectData, ProjectCreator})=>{\r\n\r\n    return <ProjectPage ProjectData={ProjectData} ProjectCreator={ProjectCreator}/>\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType) => ({\r\n    ProjectData: state.ProjectPage.ProjectData\r\n})\r\n\r\nexport default React.memo(connect(mapStateToProps, {ProjectCreator})(ProjectPageContainer))\r\n\r\n"],"names":["active","setActive","children","className","c","onClick","e","stopPropagation","ProjectCard","title","React","ProjectPage","ProjectData","ProjectCreator","useState","modalActive","setModalActive","ModalForm","setTitle","error","setError","onSubmit","preventDefault","every","project","name","length","HandleSubmit","style","border","value","pattern","onChange","target","type","placeholder","disabled","color","fontSize","borderBottom","map","el","to","id","Modal","connect","state"],"sourceRoot":""}